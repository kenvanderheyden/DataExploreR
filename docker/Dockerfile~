##FROM debian:testing
FROM ubuntu:14.04

MAINTAINER Ken "ken@mindstorms.be" 

## Set a default user. Available via runtime flag `--user docker` 
## Add user to 'staff' group, granting them write privileges to /usr/local/lib/R/site.library
## User should also have & own a home directory (for rstudio or linked volumes to work properly). 
RUN useradd docker \
	&& mkdir /home/docker \
	&& chown docker:docker /home/docker \
	&& addgroup docker staff

RUN apt-get update \ 
	&& apt-get install -y --no-install-recommends \
#		ed \
#		less \
		locales \
#		vim-tiny \
#		wget \
#		ca-certificates \
	&& rm -rf /var/lib/apt/lists/*

## Configure default locale, see https://github.com/rocker-org/rocker/issues/19
RUN echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen \
	&& locale-gen en_US.utf8 \
	&& /usr/sbin/update-locale LANG=en_US.UTF-8

ENV LC_ALL en_US.UTF-8
ENV LANG en_US.UTF-8

## Use Debian unstable via pinning -- new style via APT::Default-Release
# RUN echo "deb http://http.debian.net/debian sid main" > /etc/apt/sources.list.d/ubuntu.list \
# RUN echo 'APT::Default-Release "InRelease";' > /etc/apt/apt.conf.d/default

ENV R_BASE_VERSION 3.2.2

# Need this to add R repo
RUN apt-get update && apt-get install -y software-properties-common

# Add R apt repository
RUN add-apt-repository "deb http://cran.rstudio.com/bin/linux/ubuntu $(lsb_release -cs)/"
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9

# Install basic stuff and R
RUN apt-get update && apt-get install -y \
    vim-tiny \
    less \
    wget \
    r-base \
    r-base-dev \
    r-recommended
    
CMD ["R"]

 RUN apt-get update && apt-get install -y \
    sudo \
    gdebi-core \
#    pandoc \
#    pandoc-citeproc \
#    libcurl4-gnutls-dev \
#    libcairo2-dev \
#    libxt-dev
    
# Download and install libssl 
# http://launchpadlibrarian.net/244105462/libssl-dev_1.0.1f-1ubuntu2.18_amd64.deb
 RUN wget --no-verbose http://launchpadlibrarian.net/244105462/libssl-dev_1.0.1f-1ubuntu2.18_amd64.deb && \
    dpkg -i libssl-dev_1.0.1f-1ubuntu2.18_amd64.deb && \
    rm -f libssl-dev_1.0.1f-1ubuntu2.18_amd64.deb

# RUN apt-get install libssl1.0.0
   
# Download and install shiny server 

RUN wget --no-verbose https://download3.rstudio.org/ubuntu-12.04/x86_64/shiny-server-1.4.2.786-amd64.deb && \
	gdebi shiny-server-1.4.2.786-amd64.deb
#    wget --no-verbose "https://download3.rstudio.org/ubuntu-12.04/x86_64/shiny-server-1.4.2.786-amd64.deb" -O ss-latest.deb && \
#    gdebi -n ss-latest.deb && \
#    rm -f ss-latest.deb
    
RUN R -e "install.packages(c('shiny', 'rmarkdown'), dependencies = TRUE, repos='https://cran.rstudio.com/')"

## RUN cp -R /usr/local/lib/R/site-library/shiny/examples/* /srv/shiny-server/

# RUN apt-get update && apt-get install -y -t r-cran-caret

RUN sudo su - -c "R -e \"install.packages(c('caret', 'dplyr', 'gplots'), dependencies = TRUE, repos='http://cran.rstudio.com/')\"" 

## RUN echo "deb https://cloud.r-project.org/" | sudo tee -a /etc/apt/sources.list

# RUN sudo su - -c "R -e \"install.packages(c('RGtk2', 'pmml', 'cairoDevice', 'graph', 'gWidgetsRGtk2', 'odfWeave', 'playwith', 'RBGL', 'rggobi', 'RGtk2Extras', 'RODBC', 'XML', 'pkgDepTools', 'Rgraphviz'), dependencies = TRUE, repos='http://cran.rstudio.com/')\""

RUN sudo su - -c "R -e \"install.packages(c('rattle'), dependencies = TRUE, repos='http://rattle.togaware.com')\"" 

EXPOSE 3838 

COPY shiny-server.sh /usr/bin/shiny-server.sh

CMD ["/usr/bin/shiny-server.sh"]
